<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="purproduct">

	<!-- 상품 가입 -->
	<insert id="insertSubscription" parameterType="NePreSavProdDTO">
	    INSERT INTO nepreSavProd (
	        subscription_id, member_id, product_code, 
	        subscription_amount, subscription_select, early_refund 
	    ) VALUES (
	        subscription_id_seq.nextval, 
	        #{member_id, jdbcType=VARCHAR}, 
	        #{product_code, jdbcType=VARCHAR}, 
	        #{subscription_amount},
	        #{subscription_select, jdbcType=VARCHAR}, 
	        0
	    )
	</insert>

	<select id="getByMemberId" parameterType="NePreSavProdDTO" resultType="Map">
	    SELECT *
	    FROM nepreSavProd nsp
	    JOIN neSavProd ns
	    ON nsp.product_code = ns.product_code
	    WHERE nsp.member_id = #{member_id}
	    AND nsp.status IN ('활성', '해지', '만기')
	</select>
	
	<!-- 전체정보 가져오기 (회원ID,상품ID) -->
	<select id="getAllSubscriptionsIDPROD" parameterType="Map" resultType="NePreSavProdDTO">
	    SELECT * 
	    FROM nepreSavProd
	    WHERE member_id = #{memberId}
	    AND product_code = #{productCode}
	</select>
	
	<!-- 상품 해지(회원 상태변경, 포기 환급액, 해지 날짜 기록) -->
	<update id="terminateSubscription" parameterType="NePreSavProdDTO">
	    UPDATE nepreSavProd
	    SET 
	        status = '해지',
	        termination_date = SYSDATE,
	        early_refund = (subscription_amount + 
	                        (CASE 
	                            WHEN auto_cycle = '매일' THEN auto_amount * 30
	                            WHEN auto_cycle = '매주' THEN auto_amount * 4
	                            WHEN auto_cycle = '매달' THEN auto_amount
	                            ELSE 0
	                         END)
	                       ) * (1 - (SELECT early_fee FROM neSavProd WHERE product_code = nepreSavProd.product_code) / 100)
	    WHERE member_id = #{member_id}
	    and product_code = #{product_code}
	</update>


	<!-- 상품의 종료일이 도래한 경우 골든볼에 대한 처리를 수행 -->
	
	
	<select id="selectRandomMemberId" resultType="String">
        SELECT member_id
        FROM (
            SELECT member_id
            FROM nepreSavProd
            WHERE status = '활성'
            ORDER BY DBMS_RANDOM.VALUE
        )
        WHERE ROWNUM = 1
    </select>
    
	
	<update id="allocateGoldenBallAmount" parameterType="String">
		UPDATE nepreSavProd nps
		SET total_payment = NVL(nps.total_payment, 0) + (
		    SELECT NVL(SUM(np.accumulated_amount), 0)
		    FROM neSavProd np
		    WHERE np.end_date &lt; SYSDATE
		    AND np.product_code = nps.product_code
		)
		SET winner = #{memberId}
		WHERE nps.member_id = #{member_id}
		AND EXISTS (
		    SELECT 1 FROM neSavProd
		    WHERE end_date &lt; SYSDATE
		    AND product_code = nps.product_code
		)

	</update>

	<update id="updateWinner" parameterType="String">
        UPDATE neSavProd
        SET winner = #{member_id}
        WHERE end_date &lt; SYSDATE
        AND product_code IN (
            SELECT product_code
            FROM nepreSavProd
            WHERE member_id = #{member_id}
        )
    </update>


	<!-- 골든볼 이율만 반환 -->
	<!-- memberId,productCode -->
	<update id="applyGoldenBallRate" parameterType="Map">
	    UPDATE nepreSavProd
		SET total_payment = NVL(total_payment, 0) + (
		    (
		        nepreSavProd.subscription_amount + 
		        CASE 
		            WHEN nepreSavProd.auto_cycle = '매일' THEN nepreSavProd.auto_amount * ROUND(MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date) * 30)
		            WHEN nepreSavProd.auto_cycle = '매주' THEN nepreSavProd.auto_amount * ROUND(MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date) * 4)
		            WHEN nepreSavProd.auto_cycle = '매달' THEN nepreSavProd.auto_amount * MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date)
		            ELSE 0
		        END
		    ) * 
		    (
		        SELECT ns.goldenball_rate / 100 
		        FROM neSavProd ns
		        WHERE ns.product_code = nepreSavProd.product_code
		    ) * 
		    MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date)
		)
		WHERE member_id = #{memberId}
		AND product_code = #{productCode}
		AND subscription_select = '골든볼'
		AND status = '활성'
		AND EXISTS (
		    SELECT 1 FROM neSavProd ns 
		    WHERE ns.product_code = nepreSavProd.product_code
		    AND ns.product_status = '활성'
		    AND ns.end_date >= SYSDATE
		)
	</update>



	
	<!-- 기본 이율만 반환 -->
	<update id="applyBaseRate" parameterType="Map">
	    UPDATE nepreSavProd
		SET total_payment = NVL(total_payment, 0) + (
		    (
		        nepreSavProd.subscription_amount + 
		        CASE 
		            WHEN nepreSavProd.auto_cycle = '매일' THEN nepreSavProd.auto_amount * ROUND(MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date) * 30)
		            WHEN nepreSavProd.auto_cycle = '매주' THEN nepreSavProd.auto_amount * ROUND(MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date) * 4)
		            WHEN nepreSavProd.auto_cycle = '매달' THEN nepreSavProd.auto_amount * MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date)
		            ELSE 0
		        END
		    ) * 
		    (
		        SELECT ns.goldenball_rate / 100 
		        FROM neSavProd ns
		        WHERE ns.product_code = nepreSavProd.product_code
		    ) * 
		    MONTHS_BETWEEN(SYSDATE, nepreSavProd.subscription_date)
		)
		WHERE member_id = #{memberId}
		AND product_code = #{productCode}
		AND subscription_select = '일반'
		AND status = '활성'
		AND EXISTS (
		    SELECT 1 FROM neSavProd ns 
		    WHERE ns.product_code = nepreSavProd.product_code
		    AND ns.product_status = '활성'
		    AND ns.end_date >= SYSDATE
		)
	</update>
	
		<!-- 활성화된 회원 목록을 가져옴 -->
    <select id="getStatusY" resultType="Map">
        SELECT *
        FROM nepreSavProd
        WHERE status = '활성'
    </select>

	<!-- 자동결제가 활성화된 회원 목록을 가져옴 -->
    <select id="getActiveAuto" resultType="Map">
        SELECT *
        FROM nepreSavProd
        WHERE auto_enabled = 'Y'
          AND status = '활성'
    </select>
    
	<!-- 추가금 넣기 -->
	<update id="AdditionalAmount" parameterType="Map">
       UPDATE nepreSavProd
        SET total_payment = NVL(total_payment, 0) + #{additionalAmount}
        WHERE member_id = #{member_id}
          AND product_code = #{product_code}
	</update>


	<!-- 결제는 따로 가입 -->

	<!-- 자동결제 수정 -->
	<update id="updateAutoPayment" parameterType="NePreSavProdDTO">
	    UPDATE nepreSavProd
	    SET 
	    	auto_enabled = 'Y',
	        auto_amount = #{auto_amount},
	        auto_cycle = #{auto_cycle},
	        auto_account = #{auto_account},
	        auto_date = #{auto_date}
	   	WHERE member_id = #{member_id}
	    AND product_code = #{product_code}
	    AND status = '활성'
	</update>
	
	<!-- 자동결제 삭제 -->
	<update id="deleteAutoPayment" parameterType="Map">
	    UPDATE nepreSavProd
	    SET 
	        auto_enabled = 'N',
	        auto_amount = NULL,
	        auto_cycle = NULL,
	        auto_account = NULL,
	        auto_date = NULL
	   	WHERE member_id = #{memberId}
	    AND product_code = #{productCode}
	</update>
	
	<!--해지한 상품 정보 삭제 -->
	<delete id="deleteProProduct" parameterType="int">
	delete from nepreSavProd where subscription_id = #{subscription_id}
	</delete>

	<select id="findProdDo" parameterType="NePreSavProdDTO" resultType="NePreSavProdDTO">
    SELECT *
    FROM nepreSavProd 
    WHERE member_id = #{member_id}
    AND product_code = #{product_code}
    AND status IN ('활성')
</select>
	
	<!-- 회원탈퇴시 상품정보 삭제 -->
	<delete id="deleteAllProduct" parameterType="String">
		delete from nepreSavProd where member_id = #{member_id}
	</delete>
	
	<select id="getSignMemberId" parameterType="NePreSavProdDTO" resultType="Map">
	    SELECT *
	    FROM nepreSavProd nsp
	    JOIN neSavProd ns
	    ON nsp.product_code = ns.product_code
	    WHERE nsp.member_id = #{member_id}
	    AND nsp.status IN ('활성')
	</select>
	
</mapper>
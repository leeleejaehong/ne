<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.neoheulge.admin.service.AdminDAO">
	 <select id="memberAll" parameterType="map" resultType="MemberDTO">
        SELECT * FROM (
            SELECT a.*, ROWNUM rnum
            FROM (
                SELECT * FROM nemember
                ORDER BY signup_date DESC
            ) a
           <![CDATA[ WHERE ROWNUM <= #{offset} + #{size}]]>
        )
       <![CDATA[ WHERE rnum > #{offset}]]>
    </select>
    
    <!-- 검색된 회원 조회 쿼리 -->
    <select id="searchMember" parameterType="map" resultType="MemberDTO">
        SELECT * FROM (
            SELECT a.*, ROWNUM rnum
            FROM (
                SELECT * FROM nemember
                <where>
                    <choose>
                        <when test="searchType == 'id'">
                            memberid LIKE '%' || #{searchKeyword} || '%'
                        </when>
                        <when test="searchType == 'nickname'">
                            nickname LIKE '%' || #{searchKeyword} || '%'
                        </when>
                        <otherwise>
                            1=1
                        </otherwise>
                    </choose>
                </where>
                ORDER BY signup_date DESC
            ) a
           <![CDATA[ WHERE ROWNUM <= #{offset} + #{size}]]>
        )
       <![CDATA[ WHERE rnum > #{offset}]]>
    </select>
    
    <!-- 총 데이터 개수 조회 쿼리 -->
    <select id="getTotalCount" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM nemember
        <where>
            <choose>
                <when test="searchType == 'id'">
                    memberid LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test="searchType == 'nickname'">
                    nickname LIKE '%' || #{searchKeyword} || '%'
                </when>
                <otherwise>
                    1=1
                </otherwise>
            </choose>
        </where>
    </select>
    <select id ="findMember" parameterType="String" resultType="MemberDTO">
   SELECT *	FROM nemember WHERE memberid = #{memberID}
    </select>
    
   <update id="updateMember" parameterType="MemberDTO">
    UPDATE nemember
    <set>
        <if test="grade != null">grade = #{grade},</if>
        <if test="name != null">name = #{name},</if>
        <if test="profile != null">profile = #{profile},</if>
        <if test="nickname != null">nickname = #{nickname},</if>
        <if test="email != null">email = #{email},</if>
        <if test="phone != null">phone = #{phone},</if>
    </set>
    WHERE memberid = #{memberID}
</update>

	<delete id ="deleteMember" parameterType="String">
		delete from nemember where memberid = #{memberID} 
	</delete>
	
	<insert id="addProd" parameterType="NeSavProdDTO">
	    INSERT INTO neSavProd (
        product_code,
        product_name,
        product_image,
        base_rate,
        goldenball_rate,
        subscription_method,
        subscription_period,
        accumulated_amount,
        termination_conditions,
        early_fee,
        minimum_deposit,
        maximum_deposit,
        start_date,
        product_description
    ) VALUES (
       	product_code_seq.NEXTVAL,
        #{product_name},
        #{product_image},
        #{base_rate},
        #{goldenball_rate},
        #{subscription_method},
        #{subscription_period},
       	NULL,
        #{termination_conditions},
        #{early_fee},
        #{minimum_deposit},
        #{maximum_deposit},
        #{start_date, jdbcType=DATE},
        #{product_description}
    )
</insert>
<select id ="prodList" resultType="neSavProdDTO">
	select * from neSavProd
</select>
	<select id="prodInfo" resultType="neSavProdDTO" parameterType ="String">
	select * from neSavProd where product_code=#{product_code}
	</select>
	<update id="updateProd" parameterType="neSavProdDTO">
    UPDATE neSavProd
    SET 
        product_name = #{product_name},
        <if test="product_image != null">
            product_image = #{product_image},
        </if>
        base_rate = #{base_rate},
        goldenball_rate = #{goldenball_rate},
        subscription_method = #{subscription_method},
        subscription_period = #{subscription_period},
        termination_conditions = #{termination_conditions},
        minimum_deposit = #{minimum_deposit},
        maximum_deposit = #{maximum_deposit},
        start_date = #{start_date, jdbcType=DATE},
        product_description = #{product_description}
    WHERE product_code = #{product_code}
</update>
<delete id="deleteProd" parameterType="String">
	Delete from NeSavProd where product_code=#{product_code}
</delete>
<delete id ="deleteExpired">
DELETE FROM NESAVPROD WHERE END_DATE &lt; ADD_MONTHS(SYSDATE,-12)
</delete>
<select id="chartList" resultType="neSavProdDTO" parameterType="String">
<!-- SELECT chart화 쿼리-->
	   Select
	    p.product_code,
	    p.accumulated_amount,
	    COUNT(s.MEMBER_ID) AS numberOfSubscribers
	FROM 
	    neSavProd p
	LEFT JOIN 
	    nepreSavProd s 
	ON 
	    p.product_code = s.product_code
	WHERE 
	    p.product_code = #{product_code}
	GROUP BY 
	    p.product_code, p.accumulated_amount
	ORDER BY 
	    p.product_code

</select>

</mapper>